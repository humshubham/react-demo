{"ast":null,"code":"var _jsxFileName = \"/home/shubhamsingh/Projects/react-demo/src/components/TaskInput.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { inputChangeHandle, formSubmitHandle, filterValueChangeHandle, filterFuncHandle, setTaskArr } from '../redux/actionCreators';\n\nfunction TaskInput(props) {\n  const {\n    inputValue,\n    filterValue,\n    taskArr,\n    filterValueChangeHandle,\n    inputChangeHandle,\n    formSubmitHandle,\n    filterFuncHandle,\n    setTaskArr\n  } = props;\n\n  const saveLocalTasks = () => {\n    localStorage.setItem(\"tasks\", JSON.stringify(taskArr));\n  };\n\n  useEffect(() => {\n    const getLocalTasks = () => {\n      if (localStorage.getItem('tasks') === null) {\n        localStorage.setItem('tasks', JSON.stringify([]));\n      } else {\n        const local = JSON.parse(localStorage.getItem('tasks'));\n        setTaskArr(local);\n      }\n    };\n\n    getLocalTasks();\n  }, []);\n  useEffect(() => {\n    filterFuncHandle();\n    saveLocalTasks();\n  }, [filterFuncHandle, filterValue, taskArr]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      return formSubmitHandle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    required: true,\n    value: inputValue,\n    onChange: inputChangeHandle,\n    className: \"task-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"task-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"tasks\",\n    value: filterValue,\n    onChange: filterValueChangeHandle,\n    className: \"filter-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Completed\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"uncompleted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Incomplete\")))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    inputValue: state.inputValue,\n    filterValue: state.filterValue,\n    taskArr: state.taskArr\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    inputChangeHandle: e => dispatch(inputChangeHandle(e)),\n    filterValueChangeHandle: e => dispatch(filterValueChangeHandle(e)),\n    formSubmitHandle: () => dispatch(formSubmitHandle()),\n    filterFuncHandle: () => dispatch(filterFuncHandle()),\n    setTaskArr: local => dispatch(setTaskArr(local))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskInput);","map":{"version":3,"sources":["/home/shubhamsingh/Projects/react-demo/src/components/TaskInput.js"],"names":["React","useEffect","connect","inputChangeHandle","formSubmitHandle","filterValueChangeHandle","filterFuncHandle","setTaskArr","TaskInput","props","inputValue","filterValue","taskArr","saveLocalTasks","localStorage","setItem","JSON","stringify","getLocalTasks","getItem","local","parse","e","preventDefault","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport { inputChangeHandle, formSubmitHandle, filterValueChangeHandle, filterFuncHandle, setTaskArr} from '../redux/actionCreators';\n\nfunction TaskInput(props) {\n    const {inputValue,\n        filterValue,\n        taskArr,\n        filterValueChangeHandle,\n        inputChangeHandle,\n        formSubmitHandle,\n        filterFuncHandle,\n        setTaskArr} = props;\n\n        const saveLocalTasks = () =>{\n            localStorage.setItem(\"tasks\", JSON.stringify(taskArr));\n        };\n        \n\n        useEffect(() => {\n            const getLocalTasks = () =>{\n                if(localStorage.getItem('tasks') === null){\n                    localStorage.setItem('tasks', JSON.stringify([]));\n                } else{\n                    const local = JSON.parse(localStorage.getItem('tasks'));\n                    setTaskArr(local);\n                }\n            };\n            getLocalTasks();            \n        }, [])\n\n        useEffect(() => {\n            filterFuncHandle();\n            saveLocalTasks();\n        }, [filterFuncHandle,filterValue, taskArr])\n\n    return (\n        <>\n        <form onSubmit={(e) => {e.preventDefault(); return formSubmitHandle()}}>\n            <input type=\"text\" required value={inputValue} onChange={inputChangeHandle}  className=\"task-input\" />\n            <button className=\"task-button\" type=\"submit\">\n                Add\n            </button>\n        \n        <div className=\"select\">\n            <select name=\"tasks\" value={filterValue}  onChange={filterValueChangeHandle}className=\"filter-task\">\n                <option value=\"all\">All</option>\n                <option value=\"completed\">Completed</option>\n                <option value=\"uncompleted\">Incomplete</option>\n            </select>\n        </div>\n        </form>\n\n        </>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        inputValue : state.inputValue,\n        filterValue : state.filterValue,\n        taskArr : state.taskArr\n    }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        inputChangeHandle : (e) => dispatch(inputChangeHandle(e)),\n        filterValueChangeHandle : (e) => dispatch(filterValueChangeHandle(e)),\n        formSubmitHandle : () => dispatch(formSubmitHandle()),\n        filterFuncHandle : () => dispatch(filterFuncHandle()),\n        setTaskArr : (local) => dispatch(setTaskArr(local))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskInput);\n"]},"metadata":{},"sourceType":"module"}