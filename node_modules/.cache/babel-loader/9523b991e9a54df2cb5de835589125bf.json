{"ast":null,"code":"var _jsxFileName = \"/home/shubhamsingh/Projects/todoApp-using-react-redux-localStorage/src/components/TaskItem.js\";\nimport React from 'react';\nimport { BiCheck } from 'react-icons/bi';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport { completedCheckHandle, deleteHandle } from '../redux/actionCreators';\n\nfunction TaskItem(props) {\n  const {\n    task,\n    completedCheckHandle,\n    deleteHandle\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: `task-item ${task.completed ? 'completed' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, task.text), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"complete-btn\",\n    onClick: () => completedCheckHandle(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Done\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"trash-btn\",\n    onClick: () => deleteHandle(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaTrashAlt, {\n    color: \"white\",\n    size: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    completedCheckHandle: id => dispatch(completedCheckHandle(id)),\n    deleteHandle: id => dispatch(deleteHandle(id))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TaskItem);","map":{"version":3,"sources":["/home/shubhamsingh/Projects/todoApp-using-react-redux-localStorage/src/components/TaskItem.js"],"names":["React","BiCheck","FaTrashAlt","connect","completedCheckHandle","deleteHandle","TaskItem","props","task","completed","text","id","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,gBAAtB;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,oBAAR,EAA6BC,YAA7B,QAAgD,yBAAhD;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAACC,IAAAA,IAAD;AAAOJ,IAAAA,oBAAP;AAA6BC,IAAAA;AAA7B,MAA6CE,KAAnD;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAG,aAAYC,IAAI,CAACC,SAAL,GAAiB,WAAjB,GAA+B,EAAG,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,CAACE,IADV,CADJ,eAII;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAE,MAAMN,oBAAoB,CAACI,IAAI,CAACG,EAAN,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAE,MAAMN,YAAY,CAACG,IAAI,CAACG,EAAN,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,OAAlB;AAA0B,IAAA,IAAI,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,CADJ;AAaH;;AACD,MAAMC,kBAAkB,GAAIC,QAAD,IAAa;AACpC,SAAO;AACHT,IAAAA,oBAAoB,EAAIO,EAAD,IAAQE,QAAQ,CAACT,oBAAoB,CAACO,EAAD,CAArB,CADpC;AAEHN,IAAAA,YAAY,EAAIM,EAAD,IAAQE,QAAQ,CAACR,YAAY,CAACM,EAAD,CAAb;AAF5B,GAAP;AAIH,CALD;;AAMA,eAAeR,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAP,CAAkCN,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {BiCheck} from 'react-icons/bi';\nimport {FaTrashAlt} from 'react-icons/fa';\nimport {connect} from 'react-redux';\nimport {completedCheckHandle,deleteHandle} from '../redux/actionCreators'\n\nfunction TaskItem(props) {\n    const {task, completedCheckHandle, deleteHandle} = props;\n    return (\n        <div className='task'>\n            <li className={`task-item ${task.completed ? 'completed' : ''}`}>\n                {task.text}\n            </li>\n            <button className='complete-btn' onClick={() => completedCheckHandle(task.id)}>\n                Done\n            </button>\n            <button className='trash-btn' onClick={() => deleteHandle(task.id)}>\n                <FaTrashAlt color='white' size='2rem'/>\n            </button>\n        </div>\n    )\n}\nconst mapDispatchToProps = (dispatch) =>{\n    return {\n        completedCheckHandle : (id) => dispatch(completedCheckHandle(id)),\n        deleteHandle : (id) => dispatch(deleteHandle(id)),\n    }\n}\nexport default connect(null, mapDispatchToProps)(TaskItem)\n"]},"metadata":{},"sourceType":"module"}