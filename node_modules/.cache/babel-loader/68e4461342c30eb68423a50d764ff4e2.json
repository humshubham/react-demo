{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport { INPUT_VALUE_CHANGE, FORM_SUBMIT, COMPLETED_CHECK, DELETE_HANDLE, FILTER_VALUE_CHANGE_HANDLE, FILTER_FUNC, SET_TASK_ARR } from './actionType';\nconst initialState = {\n  inputValue: '',\n  taskArr: [],\n  filterValue: 'all',\n  filteredArr: []\n};\n\nconst reducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action; //InputValue Change \n\n  if (type === INPUT_VALUE_CHANGE) {\n    return { ...state,\n      inputValue: payload\n    };\n  } //filter value change\n\n\n  if (type === FILTER_VALUE_CHANGE_HANDLE) {\n    return { ...state,\n      filterValue: payload\n    };\n  } //formSubmit\n\n\n  if (type === FORM_SUBMIT) {\n    return { ...state,\n      taskArr: [...state.taskArr, {\n        id: uuidv4(),\n        text: state.inputValue,\n        completed: false\n      }],\n      inputValue: ''\n    };\n  } //Checks for completed fro not\n\n\n  if (type === COMPLETED_CHECK) {\n    const tempTaskArr = state.taskArr.map(task => {\n      if (task.id === payload) {\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    return { ...state,\n      taskArr: [...tempTaskArr]\n    };\n  } // Deleting the Toask\n\n\n  if (type === DELETE_HANDLE) {\n    const tempTaskArr = state.taskArr.filter(task => task.id !== payload);\n    return { ...state,\n      taskArr: [...tempTaskArr]\n    };\n  } //filtering the func\n\n\n  if (type === FILTER_FUNC) {\n    switch (state.filterValue) {\n      case 'completed':\n        const tempTask = state.taskArr.filter(task => task.completed === true);\n        return { ...state,\n          filteredArr: [...tempTask]\n        };\n        break;\n\n      case 'uncompleted':\n        const temp = state.taskArr.filter(task => task.completed === false);\n        return { ...state,\n          filteredArr: [...temp]\n        };\n        break;\n\n      default:\n        return { ...state,\n          filteredArr: [...state.taskArr]\n        };\n    }\n  }\n\n  if (type === SET_TASK_ARR) {\n    return { ...state,\n      taskArr: [...payload]\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/shubhamsingh/Projects/todoApp-using-react-redux-localStorage/src/redux/reducers.js"],"names":["v4","uuidv4","INPUT_VALUE_CHANGE","FORM_SUBMIT","COMPLETED_CHECK","DELETE_HANDLE","FILTER_VALUE_CHANGE_HANDLE","FILTER_FUNC","SET_TASK_ARR","initialState","inputValue","taskArr","filterValue","filteredArr","reducer","state","action","type","payload","id","text","completed","tempTaskArr","map","task","filter","tempTask","temp"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from 'uuid'\nimport {INPUT_VALUE_CHANGE,\n        FORM_SUBMIT,\n        COMPLETED_CHECK,\n        DELETE_HANDLE,\n        FILTER_VALUE_CHANGE_HANDLE,\n        FILTER_FUNC,\n        SET_TASK_ARR} from './actionType';\n\n\n\nconst initialState = {\n    inputValue : '',\n    taskArr : [],\n    filterValue : 'all',\n    filteredArr : []\n}\n\nconst reducer = (state = initialState, action) =>{\n    const {type, payload} = action\n\n//InputValue Change \n    if(type === INPUT_VALUE_CHANGE){\n        return {...state, inputValue : payload}\n    }\n\n//filter value change\n    if(type === FILTER_VALUE_CHANGE_HANDLE){\n        return {...state, filterValue : payload}\n    }\n//formSubmit\n    if(type === FORM_SUBMIT){\n        return {...state, taskArr : [...state.taskArr, {id : uuidv4(), text : state.inputValue, completed : false}], inputValue : '' }\n    }\n//Checks for completed fro not\n    if(type === COMPLETED_CHECK){\n        const tempTaskArr = state.taskArr.map(task =>{\n            if(task.id === payload){\n                return {...task, completed : !task.completed}\n            }\n            return task;\n        })\n        return {...state, taskArr : [...tempTaskArr]}\n    }\n\n// Deleting the Toask\n    if(type === DELETE_HANDLE){\n        const tempTaskArr = state.taskArr.filter(task => task.id !== payload);\n        return {...state, taskArr : [...tempTaskArr]}\n    }\n\n//filtering the func\n    if(type === FILTER_FUNC){\n\n        switch(state.filterValue){\n            case 'completed' : \n                const tempTask = state.taskArr.filter(task => task.completed === true)\n                return {...state, filteredArr : [...tempTask]}\n            break;\n\n            case 'uncompleted' : \n                const temp = state.taskArr.filter(task => task.completed === false)\n                return {...state, filteredArr : [...temp]}\n            break;\n            default : return {...state, filteredArr : [...state.taskArr]}\n        }\n    }\n\n    if(type === SET_TASK_ARR){\n        return{\n            ...state,\n            taskArr : [...payload]\n        }\n    }\n    return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}